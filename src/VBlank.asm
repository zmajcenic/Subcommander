; rutina koja se poziva svaki Vblank ciklus 
; JP na nju se postavlja u (H.TIMI)
; mora sacuvati AF
; iscrtava aktivne instance
; broji vrijeme
VBLANK:
	PUSH	AF

	; provjeri da li je source VDP
	IN	A, (&99)
	AND	A
	JP	P, VBLANK_NOT_VDP_INTR

	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	PUSH	IY

VBLANK_L1:
	CALL	PSG_PLAYER_PLAY

	LD	B, 6
	CALL	KEYBOARD_ROW_SCAN
	LD	(NEWKEY+6), A
	; procitaj row 7 za STOP
	LD	B, 7
	CALL	KEYBOARD_ROW_SCAN
	LD	H, A
	AND	&10
	LD	L, A
	LD	A, (OLDKEY+7)
	AND	A, &10
	XOR	L
	JR	Z, VBLANK_STOP_KEY_NO_CHANGE
	BIT	4, L
	JR	NZ, VBLANK_STOP_KEY_NO_CHANGE
	; STOP pressed, toggle paused state
	LD	A, (PAUSED)
	XOR	1
	LD	(PAUSED), A
	; provjeri da li je i CTRL pritisnut
	LD	A, (NEWKEY+6)
	BIT	1, A
	JR	NZ, VBLANK_STOP_KEY_NO_CHANGE
	; imamo pritisnut CTRL + STOP
	LD	A, 1
	LD	(GAME_ENDED), A
	
VBLANK_STOP_KEY_NO_CHANGE:
	LD	A, H
	LD	(OLDKEY+7), A	

VBLANK_PAUSE:
	LD	A, (PAUSED)
	OR	A
	JP	NZ, VBLANK_EXIT

	; povecaj JIFFY i broji sekunde
	LD	HL, (JIFFY)
	INC	HL
	LD	(JIFFY), HL
	LD	DE, (TIME)
	XOR	A
	SBC	HL, DE
	LD	A, 50 ; frequency
	CP	L
	JR	NC, VBLANK_CHECK_GAMETIMER_ENDED; jos nije sekunda prosla
	; prosla je sekunda
	LD	HL, (SEKUNDE)
	INC	HL
	LD	(SEKUNDE), HL
	LD	HL, (JIFFY)
	LD	(TIME), HL

VBLANK_CHECK_GAMETIMER_ENDED:
	; ako smo na izlasku iz igre odbojavaj toliko da odsvira zvuk kraja
	LD	A, (GAMETIMER_ENDED)
	OR	A
	JR	Z, VBLANK_CLOCK_BRODOVI
	LD	HL, (JIFFY)
	LD	DE, (GAMETIMER_ENDED_BEGIN_TIME)
	XOR	A
	SBC	HL, DE
	LD	A, 250 ; dobiveno testiranjem
	CP	L
	JR	NC, VBLANK_CLOCK_BRODOVI
	LD	A, 1
	LD	(GAME_ENDED), A

VBLANK_CLOCK_BRODOVI:
	LD	DE, SIZEOF_SPRITE

	LD	A, (ROW2_BROD_INST + OFF_BROD_INST_ID)
	OR	A
	JR	Z, VBLANK_L2; neaktivna instanca
	LD	A, (JIFFY)
	LD	L, A
	LD	A, (ROW2_SPEED)
	AND	L
	JR	NZ, VBLANK_L2; spori brod, nije red za crtanje
	LD	IX, ROW2_BROD_INST
	LD	IY, ROW2_BROD_INST + OFF_BROD_INST_SPRITE
	CALL	DRAW_INSTANCE

VBLANK_L2:
	LD	A, (ROW5_BROD_INST + OFF_BROD_INST_ID)
	OR	A
	JR	Z, VBLANK_L3; neaktivna instanca
	LD	A, (JIFFY)
	LD	L, A
	LD	A, (ROW5_SPEED)
	AND	L
	JR	NZ, VBLANK_L3; spori brod, nije red za crtanje
	LD	IX, ROW5_BROD_INST
	LD	IY, ROW5_BROD_INST + OFF_BROD_INST_SPRITE
	CALL	DRAW_INSTANCE

VBLANK_L3:
	LD	A, (ROW8_BROD_INST + OFF_BROD_INST_ID)
	OR	A
	JR	Z, VBLANK_L4; neaktivna instanca
	LD	A, (JIFFY)
	LD	L, A
	LD	A, (ROW8_SPEED)
	AND	L
	JR	NZ, VBLANK_L4; spori brod, nije red za crtanje
	LD	IX, ROW8_BROD_INST
	LD	IY, ROW8_BROD_INST + OFF_BROD_INST_SPRITE
	CALL	DRAW_INSTANCE

VBLANK_L4:
	LD	A, (ROW10_BROD_INST + OFF_BROD_INST_ID)
	OR	A
	JR	Z, VBLANK_L5; neaktivna instanca
	LD	A, (JIFFY)
	LD	L, A
	LD	A, (ROW10_SPEED)
	AND	L
	JR	NZ, VBLANK_L5; spori brod, nije red za crtanje
	LD	IX, ROW10_BROD_INST
	LD	IY, ROW10_BROD_INST + OFF_BROD_INST_SPRITE
	CALL	DRAW_INSTANCE

VBLANK_L5:
	LD	A, (ROW13_BROD_INST + OFF_BROD_INST_ID)
	OR	A
	JR	Z, VBLANK_6; neaktivna instanca
	LD	A, (JIFFY)
	LD	L, A
	LD	A, (ROW13_SPEED)
	AND	L
	JR	NZ, VBLANK_6; spori brod, nije red za crtanje
	LD	IX, ROW13_BROD_INST
	LD	IY, ROW13_BROD_INST + OFF_BROD_INST_SPRITE
	CALL	DRAW_INSTANCE

VBLANK_6:
	; FLOATSOME
	; uvijek aktivan, ali pomak svaka 4 vblanka
	LD	A, (JIFFY)
	AND	&03
	JR	NZ, VBLANK_CHECK_FIRE_PAUSE
	LD	IX, ROW16_BROD_INST
	LD	IY, ROW16_BROD_INST + OFF_BROD_INST_SPRITE
	CALL	DRAW_INSTANCE

VBLANK_CHECK_FIRE_PAUSE:
	; provjeri da li smo u pauzi izmedju ispucavanja torpeda
	LD	A, (PLAYER1_FIRE_PAUSE)
	OR	A
	JR	Z, VBLANK_CHECK_FIRE_PAUSE_L0
	DEC	A
	LD	(PLAYER1_FIRE_PAUSE), A
VBLANK_CHECK_FIRE_PAUSE_L0:
	LD	A, (PLAYER2_FIRE_PAUSE)
	OR	A
	JR	Z, VBLANK_L7
	DEC	A
	LD	(PLAYER2_FIRE_PAUSE), A

VBLANK_L7:
	; provjeri da li je igrac disabled od mine
	LD	A, (PLAYER1_DISABLED)
	OR	A
	JR	Z, VBLANK_L7_X1
	; disabled je, provjeri da li je isteklo vrijeme
	LD	HL, (JIFFY)
	LD	DE, (PLAYER1_DISABLED_BEGIN_TIME)
	XOR	A
	SBC	HL, DE
	LD	A, L
	CP	250; 5s
	JP	C, VBLANK_L9; nije isteklo, predji na igraca 2
	; isteklo, sakrij i disableaj animaciju za ostecen brod
	XOR	A
	LD	(PLAYER1_DISABLED), A
	LD	(OSTECENA_PODMORNICA1_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE), A
	LD	A, HW_SPRITE_HIDE_Y
	LD	(OSTECENA_PODMORNICA1_HW_SPRITE + OFF_HW_SPRITE_Y), A
	LD	HL, OSTECENA_PODMORNICA1_HW_SPRITE
	LD	A, OSTECENA_PODMORNICA1_HW_SPRITE_INDEX
	CALL	PUT_SPRITE_LITE_Y

VBLANK_L7_X1:
	; provjeri akcije igraca 1
	; citaj input method, pomakni igraca i pucaj
	LD	A, (PLAYER1_INPUT)
	CP	CTRL_JOY1
	JR	NZ, VBLANK_L7_L0
	CALL	GET_PLAYER_ACTION_JOY1
	JR	VBLANK_L7_L4
VBLANK_L7_L0:
	CP	CTRL_JOY2
	JR	NZ, VBLANK_L7_L1
	CALL	GET_PLAYER_ACTION_JOY2
	JR	VBLANK_L7_L4
VBLANK_L7_L1:
	CP	CTRL_CURSORS
	JR	NZ, VBLANK_L7_L2
	CALL	GET_PLAYER_ACTION_CURSORS
	JR	VBLANK_L7_L4
VBLANK_L7_L2:
	CP	CTRL_ADCTRL
	JR	NZ, VBLANK_L7_L3
	CALL	GET_PLAYER_ACTION_ADCTRL
	JR	VBLANK_L7_L4
VBLANK_L7_L3:
	CALL	GET_PLAYER_ACTION_IPSHIFT
VBLANK_L7_L4:
	PUSH	DE
	OR	A
	JP	Z, VBLANK_L8
	; pritisnut fire
	; provjeri da li smo u pauzi izmedju ispucavanja
	LD	A, (PLAYER1_FIRE_PAUSE)
	OR	A
	JP	NZ, VBLANK_L8	
	; nismo, provjeri redom L1, R1, L2, R2
	LD	A, (PLAYER1_TORPEDO_L1 + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_READY
	JR	NZ, VBLANK_L7_L5
	; L1 torpedo je ready
	LD	A, TORPEDO_STATUS_FIRED
	LD	(PLAYER1_TORPEDO_L1 + OFF_TORPEDO_STATUS), A
	XOR	A
	LD	(PLAYER1_TORPEDO_L1 + OFF_TORPEDO_BRZINA), A
	LD	(PLAYER1_TORPEDO_L1 + OFF_TORPEDO_BRZINA_DECIMAL), A
	LD	(PLAYER1_TORPEDO_L1 + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, FIRE_PAUSE
	LD	(PLAYER1_FIRE_PAUSE), A
	LD	HL, (JIFFY)
	LD	(PLAYER1_TORPEDO_L1 + OFF_TORPEDO_BEGIN_TIME), HL
	LD	A, 185
	LD	(HW_SPRITE_TORPEDO_PLAYER1_L1 + OFF_HW_SPRITE_Y), A
	LD	A, (ROW23_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	6
	LD	(HW_SPRITE_TORPEDO_PLAYER1_L1 + OFF_HW_SPRITE_X), A
	LD	A, TORPEDO_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_PLAYER1_L1 + OFF_HW_SPRITE_PATTERN), A
	LD	A, 15
	LD	(HW_SPRITE_TORPEDO_PLAYER1_L1 + OFF_HW_SPRITE_COLOR), A
	LD	HL, HW_SPRITE_TORPEDO_PLAYER1_L1
	LD	A, HW_SPRITE_TORPEDO_PLAYER1_L1_INDEX
	CALL	PUT_SPRITE_FULL
	JP	VBLANK_L7_L8
VBLANK_L7_L5:
	LD	A, (PLAYER1_TORPEDO_R1 + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_READY
	JR	NZ, VBLANK_L7_L6
	; R1 torpedo je ready
	LD	A, TORPEDO_STATUS_FIRED
	LD	(PLAYER1_TORPEDO_R1 + OFF_TORPEDO_STATUS), A
	XOR	A
	LD	(PLAYER1_TORPEDO_R1 + OFF_TORPEDO_BRZINA), A
	LD	(PLAYER1_TORPEDO_R1 + OFF_TORPEDO_BRZINA_DECIMAL), A
	LD	(PLAYER1_TORPEDO_R1 + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, FIRE_PAUSE
	LD	(PLAYER1_FIRE_PAUSE), A
	LD	HL, (JIFFY)
	LD	(PLAYER1_TORPEDO_R1 + OFF_TORPEDO_BEGIN_TIME), HL
	LD	A, 185
	LD	(HW_SPRITE_TORPEDO_PLAYER1_R1 + OFF_HW_SPRITE_Y), A
	LD	A, (ROW23_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	18
	LD	(HW_SPRITE_TORPEDO_PLAYER1_R1 + OFF_HW_SPRITE_X), A
	LD	A, TORPEDO_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_PLAYER1_R1 + OFF_HW_SPRITE_PATTERN), A
	LD	A, 15
	LD	(HW_SPRITE_TORPEDO_PLAYER1_R1 + OFF_HW_SPRITE_COLOR), A
	LD	HL, HW_SPRITE_TORPEDO_PLAYER1_R1
	LD	A, HW_SPRITE_TORPEDO_PLAYER1_R1_INDEX
	CALL	PUT_SPRITE_FULL
	JP	VBLANK_L7_L8
VBLANK_L7_L6:
	LD	A, (PLAYER1_TORPEDO_L2 + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_READY
	JR	NZ, VBLANK_L7_L7
	; L2 torpedo je ready
	LD	A, TORPEDO_STATUS_FIRED
	LD	(PLAYER1_TORPEDO_L2 + OFF_TORPEDO_STATUS), A
	XOR	A
	LD	(PLAYER1_TORPEDO_L2 + OFF_TORPEDO_BRZINA), A
	LD	(PLAYER1_TORPEDO_L2 + OFF_TORPEDO_BRZINA_DECIMAL), A
	LD	(PLAYER1_TORPEDO_L2 + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, FIRE_PAUSE
	LD	(PLAYER1_FIRE_PAUSE), A
	LD	HL, (JIFFY)
	LD	(PLAYER1_TORPEDO_L2 + OFF_TORPEDO_BEGIN_TIME), HL
	LD	A, 185
	LD	(HW_SPRITE_TORPEDO_PLAYER1_L2 + OFF_HW_SPRITE_Y), A
	LD	A, (ROW23_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	6
	LD	(HW_SPRITE_TORPEDO_PLAYER1_L2 + OFF_HW_SPRITE_X), A
	LD	A, TORPEDO_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_PLAYER1_L2 + OFF_HW_SPRITE_PATTERN), A
	LD	A, 15
	LD	(HW_SPRITE_TORPEDO_PLAYER1_L2 + OFF_HW_SPRITE_COLOR), A
	LD	HL, HW_SPRITE_TORPEDO_PLAYER1_L2
	LD	A, HW_SPRITE_TORPEDO_PLAYER1_L2_INDEX
	CALL	PUT_SPRITE_FULL
	JR	VBLANK_L7_L8
VBLANK_L7_L7:
	LD	A, (PLAYER1_TORPEDO_R2 + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_READY
	JR	NZ, VBLANK_L8
	; R2 torpedo je ready
	LD	A, TORPEDO_STATUS_FIRED
	LD	(PLAYER1_TORPEDO_R2 + OFF_TORPEDO_STATUS), A
	XOR	A
	LD	(PLAYER1_TORPEDO_R2 + OFF_TORPEDO_BRZINA), A
	LD	(PLAYER1_TORPEDO_R2 + OFF_TORPEDO_BRZINA_DECIMAL), A
	LD	(PLAYER1_TORPEDO_R2 + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, FIRE_PAUSE
	LD	(PLAYER1_FIRE_PAUSE), A
	LD	HL, (JIFFY)
	LD	(PLAYER1_TORPEDO_R2 + OFF_TORPEDO_BEGIN_TIME), HL
	LD	A, 185
	LD	(HW_SPRITE_TORPEDO_PLAYER1_R2 + OFF_HW_SPRITE_Y), A
	LD	A, (ROW23_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	18
	LD	(HW_SPRITE_TORPEDO_PLAYER1_R2 + OFF_HW_SPRITE_X), A
	LD	A, TORPEDO_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_PLAYER1_R2 + OFF_HW_SPRITE_PATTERN), A
	LD	A, 15
	LD	(HW_SPRITE_TORPEDO_PLAYER1_R2 + OFF_HW_SPRITE_COLOR), A
	LD	HL, HW_SPRITE_TORPEDO_PLAYER1_R2
	LD	A, HW_SPRITE_TORPEDO_PLAYER1_R2_INDEX
	CALL	PUT_SPRITE_FULL
VBLANK_L7_L8:
	LD	IX, PLAYER1_TORPEDO_L1
	CALL	GET_TORPEDO_TUBES_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_STATUS_PLAYER1 + OFF_HW_SPRITE_PATTERN), A
	LD	A, HW_SPRITE_TORPEDO_STATUS_PLAYER1_INDEX
	LD	HL, HW_SPRITE_TORPEDO_STATUS_PLAYER1
	CALL	PUT_SPRITE_LITE_PATTERN
	; sound
	LD	A, (GAMETIMER_ENDED)
	OR	A
	JR	NZ, VBLANK_L8
	LD	A, 3; sound effect number
	LD	C, 2; channel
	LD	B, 0; volume, 0=full
	CALL	SOUNDS_PLAYER_PLAY

VBLANK_L8:
	; pomak
	POP	DE
	LD	A, E
	OR	A
	JR	Z, VBLANK_L9; nema pomaka
	LD	A, (ROW23_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	A, E
	CP	233
	JR	NC, VBLANK_L9; >232, sto je ok i ako odemo u -2
	LD	(ROW23_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X), A
	ADD	A, 6
	LD	(HW_SPRITE_TORPEDO_STATUS_PLAYER1 + OFF_HW_SPRITE_X), A
	
	LD	IX, ROW23_BROD_INST
	LD	IY, ROW23_BROD_INST + OFF_BROD_INST_SPRITE
	CALL	DRAW_INST_SPRITE
	LD	A, HW_SPRITE_TORPEDO_STATUS_PLAYER1_INDEX
	LD	HL, HW_SPRITE_TORPEDO_STATUS_PLAYER1
	CALL	PUT_SPRITE_LITE_X

VBLANK_L9:
	; provjeri akcije igraca 2 ako je aktivan
	LD	A, (TWO_PLAYER_GAME)
	OR	A
	JP	Z, VBLANK_L12

	; provjeri da li je igrac disabled od mine
	LD	A, (PLAYER2_DISABLED)
	OR	A
	JR	Z, VBLANK_L10
	; disabled je, provjeri da li je isteklo vrijeme
	LD	HL, (JIFFY)
	LD	DE, (PLAYER2_DISABLED_BEGIN_TIME)
	XOR	A
	SBC	HL, DE
	LD	A, L
	CP	250; 5s
	JP	C, VBLANK_L12; nije isteklo, predji na torpeda
	; isteklo, sakrij i disableaj animaciju za ostecen brod
	XOR	A
	LD	(PLAYER2_DISABLED), A
	LD	(OSTECENA_PODMORNICA2_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE), A
	LD	A, HW_SPRITE_HIDE_Y
	LD	(OSTECENA_PODMORNICA2_HW_SPRITE + OFF_HW_SPRITE_Y), A
	LD	HL, OSTECENA_PODMORNICA2_HW_SPRITE
	LD	A, OSTECENA_PODMORNICA2_HW_SPRITE_INDEX
	CALL	PUT_SPRITE_LITE_Y

VBLANK_L10:
	LD	A, (PLAYER2_INPUT)
	CP	CTRL_JOY1
	JR	NZ, VBLANK_L10_L0
	CALL	GET_PLAYER_ACTION_JOY1
	JR	VBLANK_L10_L4
VBLANK_L10_L0:
	CP	CTRL_JOY2
	JR	NZ, VBLANK_L10_L1
	CALL	GET_PLAYER_ACTION_JOY2
	JR	VBLANK_L10_L4
VBLANK_L10_L1:
	CP	CTRL_CURSORS
	JR	NZ, VBLANK_L10_L2
	CALL	GET_PLAYER_ACTION_CURSORS
	JR	VBLANK_L10_L4
VBLANK_L10_L2:
	CP	CTRL_ADCTRL
	JR	NZ, VBLANK_L10_L3
	CALL	GET_PLAYER_ACTION_ADCTRL
	JR	VBLANK_L10_L4
VBLANK_L10_L3:
	CALL	GET_PLAYER_ACTION_IPSHIFT
VBLANK_L10_L4:
	PUSH	DE
	OR	A
	JP	Z, VBLANK_L11
	; pritisnut fire
	; provjeri da li smo u pauzi izmedju ispucavanja
	LD	A, (PLAYER2_FIRE_PAUSE)
	OR	A
	JP	NZ, VBLANK_L11	
	; nismo, provjeri redom L1, R1, L2, R2
	LD	A, (PLAYER2_TORPEDO_L1 + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_READY
	JR	NZ, VBLANK_L10_L5
	; L1 torpedo je ready
	LD	A, TORPEDO_STATUS_FIRED
	LD	(PLAYER2_TORPEDO_L1 + OFF_TORPEDO_STATUS), A
	XOR	A
	LD	(PLAYER2_TORPEDO_L1 + OFF_TORPEDO_BRZINA), A
	LD	(PLAYER2_TORPEDO_L1 + OFF_TORPEDO_BRZINA_DECIMAL), A
	LD	(PLAYER2_TORPEDO_L1 + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, FIRE_PAUSE
	LD	(PLAYER2_FIRE_PAUSE), A
	LD	HL, (JIFFY)
	LD	(PLAYER2_TORPEDO_L1 + OFF_TORPEDO_BEGIN_TIME), HL
	LD	A, 177
	LD	(HW_SPRITE_TORPEDO_PLAYER2_L1 + OFF_HW_SPRITE_Y), A
	LD	A, (ROW22_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	6
	LD	(HW_SPRITE_TORPEDO_PLAYER2_L1 + OFF_HW_SPRITE_X), A
	LD	A, TORPEDO_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_PLAYER2_L1 + OFF_HW_SPRITE_PATTERN), A
	LD	A, 13
	LD	(HW_SPRITE_TORPEDO_PLAYER2_L1 + OFF_HW_SPRITE_COLOR), A
	LD	HL, HW_SPRITE_TORPEDO_PLAYER2_L1
	LD	A, HW_SPRITE_TORPEDO_PLAYER2_L1_INDEX
	CALL	PUT_SPRITE_FULL
	JP	VBLANK_L10_L8
VBLANK_L10_L5:
	LD	A, (PLAYER2_TORPEDO_R1 + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_READY
	JR	NZ, VBLANK_L10_L6
	; R1 torpedo je ready
	LD	A, TORPEDO_STATUS_FIRED
	LD	(PLAYER2_TORPEDO_R1 + OFF_TORPEDO_STATUS), A
	XOR	A
	LD	(PLAYER2_TORPEDO_R1 + OFF_TORPEDO_BRZINA), A
	LD	(PLAYER2_TORPEDO_R1 + OFF_TORPEDO_BRZINA_DECIMAL), A
	LD	(PLAYER2_TORPEDO_R1 + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, FIRE_PAUSE
	LD	(PLAYER2_FIRE_PAUSE), A
	LD	HL, (JIFFY)
	LD	(PLAYER2_TORPEDO_R1 + OFF_TORPEDO_BEGIN_TIME), HL
	LD	A, 177
	LD	(HW_SPRITE_TORPEDO_PLAYER2_R1 + OFF_HW_SPRITE_Y), A
	LD	A, (ROW22_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	18
	LD	(HW_SPRITE_TORPEDO_PLAYER2_R1 + OFF_HW_SPRITE_X), A
	LD	A, TORPEDO_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_PLAYER2_R1 + OFF_HW_SPRITE_PATTERN), A
	LD	A, 13
	LD	(HW_SPRITE_TORPEDO_PLAYER2_R1 + OFF_HW_SPRITE_COLOR), A
	LD	HL, HW_SPRITE_TORPEDO_PLAYER2_R1
	LD	A, HW_SPRITE_TORPEDO_PLAYER2_R1_INDEX
	CALL	PUT_SPRITE_FULL
	JP	VBLANK_L10_L8
VBLANK_L10_L6:
	LD	A, (PLAYER2_TORPEDO_L2 + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_READY
	JR	NZ, VBLANK_L10_L7
	; L2 torpedo je ready
	LD	A, TORPEDO_STATUS_FIRED
	LD	(PLAYER2_TORPEDO_L2 + OFF_TORPEDO_STATUS), A
	XOR	A
	LD	(PLAYER2_TORPEDO_L2 + OFF_TORPEDO_BRZINA), A
	LD	(PLAYER2_TORPEDO_L2 + OFF_TORPEDO_BRZINA_DECIMAL), A
	LD	(PLAYER2_TORPEDO_L2 + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, FIRE_PAUSE
	LD	(PLAYER2_FIRE_PAUSE), A
	LD	HL, (JIFFY)
	LD	(PLAYER2_TORPEDO_L2 + OFF_TORPEDO_BEGIN_TIME), HL
	LD	A, 177
	LD	(HW_SPRITE_TORPEDO_PLAYER2_L2 + OFF_HW_SPRITE_Y), A
	LD	A, (ROW22_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	6
	LD	(HW_SPRITE_TORPEDO_PLAYER2_L2 + OFF_HW_SPRITE_X), A
	LD	A, TORPEDO_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_PLAYER2_L2 + OFF_HW_SPRITE_PATTERN), A
	LD	A, 13
	LD	(HW_SPRITE_TORPEDO_PLAYER2_L2 + OFF_HW_SPRITE_COLOR), A
	LD	HL, HW_SPRITE_TORPEDO_PLAYER2_L2
	LD	A, HW_SPRITE_TORPEDO_PLAYER2_L2_INDEX
	CALL	PUT_SPRITE_FULL
	JR	VBLANK_L10_L8
VBLANK_L10_L7:
	LD	A, (PLAYER2_TORPEDO_R2 + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_READY
	JR	NZ, VBLANK_L11
	; R2 torpedo je ready
	LD	A, TORPEDO_STATUS_FIRED
	LD	(PLAYER2_TORPEDO_R2 + OFF_TORPEDO_STATUS), A
	XOR	A
	LD	(PLAYER2_TORPEDO_R2 + OFF_TORPEDO_BRZINA), A
	LD	(PLAYER2_TORPEDO_R2 + OFF_TORPEDO_BRZINA_DECIMAL), A
	LD	(PLAYER2_TORPEDO_R2 + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, FIRE_PAUSE
	LD	(PLAYER2_FIRE_PAUSE), A
	LD	HL, (JIFFY)
	LD	(PLAYER2_TORPEDO_R2 + OFF_TORPEDO_BEGIN_TIME), HL
	LD	A, 177
	LD	(HW_SPRITE_TORPEDO_PLAYER2_R2 + OFF_HW_SPRITE_Y), A
	LD	A, (ROW22_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	18
	LD	(HW_SPRITE_TORPEDO_PLAYER2_R2 + OFF_HW_SPRITE_X), A
	LD	A, TORPEDO_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_PLAYER2_R2 + OFF_HW_SPRITE_PATTERN), A
	LD	A, 13
	LD	(HW_SPRITE_TORPEDO_PLAYER2_R2 + OFF_HW_SPRITE_COLOR), A
	LD	HL, HW_SPRITE_TORPEDO_PLAYER2_R2
	LD	A, HW_SPRITE_TORPEDO_PLAYER2_R2_INDEX
	CALL	PUT_SPRITE_FULL
VBLANK_L10_L8:
	LD	IX, PLAYER2_TORPEDO_L1
	CALL	GET_TORPEDO_TUBES_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_STATUS_PLAYER2 + OFF_HW_SPRITE_PATTERN), A
	LD	A, HW_SPRITE_TORPEDO_STATUS_PLAYER2_INDEX
	LD	HL, HW_SPRITE_TORPEDO_STATUS_PLAYER2
	CALL	PUT_SPRITE_LITE_PATTERN
	; sound
	LD	A, (GAMETIMER_ENDED)
	OR	A
	JR	NZ, VBLANK_L11
	LD	A, 3; sound effect number
	LD	C, 2; channel
	LD	B, 0; volume, 0=full
	CALL	SOUNDS_PLAYER_PLAY

VBLANK_L11:
	; pomak
	POP	DE
	LD	A, E
	OR	A
	JR	Z, VBLANK_L12; nema pomaka
	LD	A, (ROW22_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X)
	ADD	A, E
	CP	233
	JR	NC, VBLANK_L12; >232, sto je ok i ako odemo u -2
	LD	(ROW22_BROD_INST + OFF_BROD_INST_SPRITE + OFF_SPRITE_X), A
	ADD	A, 6
	LD	(HW_SPRITE_TORPEDO_STATUS_PLAYER2 + OFF_HW_SPRITE_X), A

	LD	IX, ROW22_BROD_INST
	LD	IY, ROW22_BROD_INST + OFF_BROD_INST_SPRITE
	CALL	DRAW_INST_SPRITE
	LD	A, HW_SPRITE_TORPEDO_STATUS_PLAYER2_INDEX
	LD	HL, HW_SPRITE_TORPEDO_STATUS_PLAYER2
	CALL	PUT_SPRITE_LITE_X

VBLANK_L12:
	; obradi torpeda za player 1
	LD	IX, PLAYER1_TORPEDO_L1
	LD	BC, HW_SPRITE_TORPEDO_PLAYER1_L1
	CALL	PROGRESS_TORPEDO
	LD	A, C

	PUSH	AF
	LD	IX, PLAYER1_TORPEDO_L2
	LD	BC, HW_SPRITE_TORPEDO_PLAYER1_L2
	CALL	PROGRESS_TORPEDO
	POP	AF
	OR	C

	PUSH	AF
	LD	IX, PLAYER1_TORPEDO_R1
	LD	BC, HW_SPRITE_TORPEDO_PLAYER1_R1
	CALL	PROGRESS_TORPEDO
	POP	AF
	OR	C

	PUSH	AF
	LD	IX, PLAYER1_TORPEDO_R2
	LD	BC, HW_SPRITE_TORPEDO_PLAYER1_R2
	CALL	PROGRESS_TORPEDO
	POP	AF
	OR	C
	JR	Z, VBLANK_L13
	; doslo je do promjene stanja torpednih cijevi
	LD	IX, PLAYER1_TORPEDO_L1
	CALL	GET_TORPEDO_TUBES_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_STATUS_PLAYER1 + OFF_HW_SPRITE_PATTERN), A
	LD	A, HW_SPRITE_TORPEDO_STATUS_PLAYER1_INDEX
	LD	HL, HW_SPRITE_TORPEDO_STATUS_PLAYER1
	CALL	PUT_SPRITE_LITE_PATTERN

VBLANK_L13:
	; provjeri za igraca 2 ako je aktivan
	LD	A, (TWO_PLAYER_GAME)
	OR	A
	JR	Z, VBLANK_L14
	; obradi torpeda za player 2
	LD	IX, PLAYER2_TORPEDO_L1
	LD	BC, HW_SPRITE_TORPEDO_PLAYER2_L1
	CALL	PROGRESS_TORPEDO
	LD	A, C

	PUSH	AF
	LD	IX, PLAYER2_TORPEDO_L2
	LD	BC, HW_SPRITE_TORPEDO_PLAYER2_L2
	CALL	PROGRESS_TORPEDO
	POP	AF
	OR	C

	PUSH	AF
	LD	IX, PLAYER2_TORPEDO_R1
	LD	BC, HW_SPRITE_TORPEDO_PLAYER2_R1
	CALL	PROGRESS_TORPEDO
	POP	AF
	OR	C

	PUSH	AF
	LD	IX, PLAYER2_TORPEDO_R2
	LD	BC, HW_SPRITE_TORPEDO_PLAYER2_R2
	CALL	PROGRESS_TORPEDO
	POP	AF
	OR	C
	JR	Z, VBLANK_L14
	; doslo je do promjene stanja torpednih cijevi
	LD	IX, PLAYER2_TORPEDO_L1
	CALL	GET_TORPEDO_TUBES_SPRITE_PATTERN
	LD	(HW_SPRITE_TORPEDO_STATUS_PLAYER2 + OFF_HW_SPRITE_PATTERN), A
	LD	A, HW_SPRITE_TORPEDO_STATUS_PLAYER2_INDEX
	LD	HL, HW_SPRITE_TORPEDO_STATUS_PLAYER2
	CALL	PUT_SPRITE_LITE_PATTERN

VBLANK_L14:
	; prodji kroz animacije

	; high profile target
	LD	A, (HIGH_PROFILE_TARGET_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L14_1
	; provjeri da li se radi o high profile target animaciji ili prikazujemo x2 nakon pogotka
	LD	HL, (HIGH_PROFILE_TARGET_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ANIMACIJA)
	LD	DE, ANIMACIJA_HIGH_PROFILE_TARGET
	XOR	A
	SBC	HL, DE
	JR	NZ, VBLANK_L14_0
	; ovo je oznaka high profile targeta, prati brod
	LD	IX, (HIGH_PROFILE_TARGET_INST)
	LD	IY, (HIGH_PROFILE_TARGET_SPRITE)
	LD	BC, HIGH_PROFILE_TARGET_HW_SPRITE
	CALL	FOLLOW_TARGET_INST_SPRITE
	LD	HL, HIGH_PROFILE_TARGET_HW_SPRITE
	LD	A, HIGH_PROFILE_TARGET_HW_SPRITE_INDEX
	CALL	PUT_SPRITE_FULL
VBLANK_L14_0:
	LD	IX, HIGH_PROFILE_TARGET_ANIMACIJA_INST
	LD	IY, HIGH_PROFILE_TARGET_HW_SPRITE
	CALL	PROGRESS_ANIMATION

VBLANK_L14_1:
	; civilian target
	LD	A, (CIVILIAN_TARGET_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L14_2
	; provjeri da li se radi o civilian target animaciji ili prikazujemo -999 nakon pogotka
	LD	HL, (CIVILIAN_TARGET_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ANIMACIJA)
	LD	DE, ANIMACIJA_CIVILIAN_TARGET
	XOR	A
	SBC	HL, DE
	JR	NZ, VBLANK_L14_1_0
	; ovo je oznaka civilian targeta, prati brod
	LD	IX, (CIVILIAN_TARGET_INST)
	LD	IY, (CIVILIAN_TARGET_SPRITE)
	LD	BC, CIVILIAN_TARGET_HW_SPRITE
	CALL	FOLLOW_TARGET_INST_SPRITE
	LD	HL, CIVILIAN_TARGET_HW_SPRITE
	LD	A, CIVILIAN_TARGET_HW_SPRITE_INDEX
	CALL	PUT_SPRITE_FULL
VBLANK_L14_1_0:
	LD	IX, CIVILIAN_TARGET_ANIMACIJA_INST
	LD	IY, CIVILIAN_TARGET_HW_SPRITE
	CALL	PROGRESS_ANIMATION	

VBLANK_L14_2:
	; player 1 torpedo L1
	LD	A, (ANIMACIJA_INST_PLAYER1_TORPEDO_L1 + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L15
	LD	IX, ANIMACIJA_INST_PLAYER1_TORPEDO_L1
	LD	IY, HW_SPRITE_TORPEDO_PLAYER1_L1
	CALL	PROGRESS_ANIMATION
VBLANK_L15:
	; player 1 torpedo L2
	LD	A, (ANIMACIJA_INST_PLAYER1_TORPEDO_L2 + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L16
	LD	IX, ANIMACIJA_INST_PLAYER1_TORPEDO_L2
	LD	IY, HW_SPRITE_TORPEDO_PLAYER1_L2
	CALL	PROGRESS_ANIMATION
VBLANK_L16:
	; player 1 torpedo R1
	LD	A, (ANIMACIJA_INST_PLAYER1_TORPEDO_R1 + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L17
	LD	IX, ANIMACIJA_INST_PLAYER1_TORPEDO_R1
	LD	IY, HW_SPRITE_TORPEDO_PLAYER1_R1
	CALL	PROGRESS_ANIMATION
VBLANK_L17:
	; player 1 torpedo R2
	LD	A, (ANIMACIJA_INST_PLAYER1_TORPEDO_R2 + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L18
	LD	IX, ANIMACIJA_INST_PLAYER1_TORPEDO_R2
	LD	IY, HW_SPRITE_TORPEDO_PLAYER1_R2
	CALL	PROGRESS_ANIMATION
VBLANK_L18:
	; player 2 torpedo L1
	LD	A, (ANIMACIJA_INST_PLAYER2_TORPEDO_L1 + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L19
	LD	IX, ANIMACIJA_INST_PLAYER2_TORPEDO_L1
	LD	IY, HW_SPRITE_TORPEDO_PLAYER2_L1
	CALL	PROGRESS_ANIMATION
VBLANK_L19:
	; player 2 torpedo L2
	LD	A, (ANIMACIJA_INST_PLAYER2_TORPEDO_L2 + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L20
	LD	IX, ANIMACIJA_INST_PLAYER2_TORPEDO_L2
	LD	IY, HW_SPRITE_TORPEDO_PLAYER2_L2
	CALL	PROGRESS_ANIMATION
VBLANK_L20:
	; player 2 torpedo R1
	LD	A, (ANIMACIJA_INST_PLAYER2_TORPEDO_R1 + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L21
	LD	IX, ANIMACIJA_INST_PLAYER2_TORPEDO_R1
	LD	IY, HW_SPRITE_TORPEDO_PLAYER2_R1
	CALL	PROGRESS_ANIMATION
VBLANK_L21:
	; player 2 torpedo R2
	LD	A, (ANIMACIJA_INST_PLAYER2_TORPEDO_R2 + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L22
	LD	IX, ANIMACIJA_INST_PLAYER2_TORPEDO_R2
	LD	IY, HW_SPRITE_TORPEDO_PLAYER2_R2
	CALL	PROGRESS_ANIMATION

VBLANK_L22:
	; mina 1
	LD	A, (MINA1_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L24
	; provjeri da li se radi o ispaljenoj mini koja tone
	LD	HL, (MINA1_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ANIMACIJA)
	LD	DE, MINA_ANIMACIJA
	XOR	A
	SBC	HL, DE
	JR	NZ, VBLANK_L23
	; to je mina koja tone, pomakni ju prema dolje
	LD	A, (MINA1_HW_SPRITE + OFF_HW_SPRITE_Y)
	INC	A
	LD	(MINA1_HW_SPRITE + OFF_HW_SPRITE_Y), A
VBLANK_L23:
	LD	IX, MINA1_ANIMACIJA_INST
	LD	IY, MINA1_HW_SPRITE
	CALL	PROGRESS_ANIMATION

VBLANK_L24:
	; mina 2
	LD	A, (MINA2_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L26
	; provjeri da li se radi o ispaljenoj mini koja tone
	LD	HL, (MINA2_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ANIMACIJA)
	LD	DE, MINA_ANIMACIJA
	XOR	A
	SBC	HL, DE
	JR	NZ, VBLANK_L25
	; to je mina koja tone, pomakni ju prema dolje
	LD	A, (MINA2_HW_SPRITE + OFF_HW_SPRITE_Y)
	INC	A
	LD	(MINA2_HW_SPRITE + OFF_HW_SPRITE_Y), A
VBLANK_L25:
	LD	IX, MINA2_ANIMACIJA_INST
	LD	IY, MINA2_HW_SPRITE
	CALL	PROGRESS_ANIMATION

VBLANK_L26:
	; player 1 animacija ostecene podmornice
	LD	A, (OSTECENA_PODMORNICA1_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L27
	LD	IX, OSTECENA_PODMORNICA1_ANIMACIJA_INST
	LD	IY, OSTECENA_PODMORNICA1_HW_SPRITE
	CALL	PROGRESS_ANIMATION
VBLANK_L27:
	; player 2 animacija ostecene podmornice
	LD	A, (OSTECENA_PODMORNICA2_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L28
	LD	IX, OSTECENA_PODMORNICA2_ANIMACIJA_INST
	LD	IY, OSTECENA_PODMORNICA2_HW_SPRITE
	CALL	PROGRESS_ANIMATION

VBLANK_L28:	
	; animacija bodova kod pogotka mine u podmornicu
	LD	A, (MINA_POGODAK_MINUS_BODOVI_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, VBLANK_L29
	LD	IX, MINA_POGODAK_MINUS_BODOVI_ANIMACIJA_INST
	LD	IY, MINA_POGODAK_MINUS_BODOVI_HW_SPRITE
	CALL	PROGRESS_ANIMATION

VBLANK_L29:

VBLANK_EXIT:
	POP	IY
	POP	IX
	POP	HL
	POP	DE
	POP	BC

VBLANK_NOT_VDP_INTR:
	POP	AF
	EI
	RETI
DRAW_INSTANCE:
	; DE postavljen gore
	LD	B, 4
DRAW_INSTANCE_L1:
	LD	A, (IY + OFF_SPRITE_AKTIV_FLAG)
	OR	A
	JR	Z, DRAW_INSTANCE_L2
	CALL	MOVE_SPRITE
	CALL	DRAW_INST_SPRITE
DRAW_INSTANCE_L2:
	ADD	IY, DE
	DJNZ	DRAW_INSTANCE_L1
	RET

; rutina izracuna x koordinatu za high profile i civilian animation na temelju pozicije i velicine broda
; IX = brod inst
; IY = inst sprite
; BC = hw sprite
FOLLOW_TARGET_INST_SPRITE:
	LD	L, (IY + OFF_SPRITE_X)
	LD	H, (IY + OFF_SPRITE_X + 1)
	LD	A, (IX + OFF_BROD_INST_DIM_X)
	SLA	A
	SLA	A
	SLA	A
	SUB	16
	SRL	A
	LD	D, 0
	LD	E, A
	ADD	HL, DE
	INC	BC
	LD	A, L
	LD	(BC), A
	INC	BC
	LD	A, H
	LD	(BC), A
	RET
	
; rutina za obradu torpeda
; IX = torpedo
; BC = hw_sprite
; vraca C=0 ako ne treba update player spritea
PROGRESS_TORPEDO:
	LD	A, (IX + OFF_TORPEDO_STATUS)
	CP	TORPEDO_STATUS_FIRED
	JR	Z, PROGRESS_TORPEDO_L1
	CP	TORPEDO_STATUS_LOADING
	JR	Z, PROGRESS_TORPEDO_L2
	; ready, ne treba update stanja torpednih cijevi
	LD	C, 0
	RET
PROGRESS_TORPEDO_L1:
	; fired
	; povecaj brzinu od 1 do 128
	LD	A, (IX + OFF_TORPEDO_BRZINA)
	BIT	7, A
	JR	NZ, PROGRESS_TORPEDO_L1_L0
	INC	A
	LD	(IX + OFF_TORPEDO_BRZINA), A
PROGRESS_TORPEDO_L1_L0:
	LD	D, 0
	LD	E, A
	LD	L, (IX + OFF_TORPEDO_BRZINA_DECIMAL)
	LD	H, (IX + OFF_TORPEDO_BRZINA_DECIMAL + 1)
	ADD	HL, DE
	ADD	HL, DE
	ADD	HL, DE
	ADD	HL, DE
	; u H je pomak, ali moramo paziti da ne predje 2
	LD	(IX + OFF_TORPEDO_BRZINA_DECIMAL), L
	LD	A, H
	AND	1
	LD	(IX + OFF_TORPEDO_BRZINA_DECIMAL + 1), A
	LD	A, (BC)
	SUB	H
	CP	8
	JR	C, PROGRESS_TORPEDO_L3
	LD	(BC), A
	LD	H, B
	LD	L, C
	LD	A, (IX + OFF_TORPEDO_HW_SPRITE_INDEX)
	CALL	PUT_SPRITE_LITE_Y
PROGRESS_TORPEDO_L0:
	; ne treba update stanja torpednih cijevi
	LD	C, 0
	RET
PROGRESS_TORPEDO_L2:
	; loading, provjeri da li je isteklo vrijeme cekanja
	; ako je postavi status na ready i napravi update torpednih cijevi na playeru
	LD	HL, (JIFFY)
	LD	E, (IX + OFF_TORPEDO_BEGIN_TIME)
	LD	D, (IX + OFF_TORPEDO_BEGIN_TIME + 1)
	XOR	A
	SBC	HL, DE
	LD	A, L
	CP	TORPEDO_RELOAD_TIME
	JR	C, PROGRESS_TORPEDO_L0
	; isteklo vrijeme punjenja
	LD	(IX + OFF_TORPEDO_STATUS), TORPEDO_STATUS_READY
	; treba update torpednih cijevi
	LD	C, 1
	RET
PROGRESS_TORPEDO_L3:
	; torpedo izasao iz ekrana
	LD	A, HW_SPRITE_HIDE_Y
	LD	(BC), A
	LD	(IX + OFF_TORPEDO_STATUS), TORPEDO_STATUS_LOADING
	LD	H, B
	LD	L, C
	LD	A, (IX + OFF_TORPEDO_HW_SPRITE_INDEX)
	CALL	PUT_SPRITE_LITE_Y
	LD	C, 0
	RET

; rutina za animiranje
; IX = animacija_inst
; IY = hw_sprite
PROGRESS_ANIMATION:
	LD	L, (IX + OFF_ANIMACIJA_INST_ANIMACIJA)
	LD	H, (IX + OFF_ANIMACIJA_INST_ANIMACIJA + 1)
	LD	C, (HL); num_iter
	INC	HL
	LD	B, (HL); loop
	INC	HL
	LD	E, (IX + OFF_ANIMACIJA_INST_CURR_ITER)
	LD	D, 0
	ADD	HL, DE
	LD	A, (HL); current pause
	PUSH	HL
	PUSH	DE
	LD	HL, (JIFFY)
	LD	E, (IX + OFF_ANIMACIJA_INST_TIME)
	LD	D, (IX + OFF_ANIMACIJA_INST_TIME + 1)
	SCF
	CCF
	SBC	HL, DE
	CP	L
	POP	DE
	POP	HL
	RET	NC
	; pauza istekla
	INC	E
	LD	A, C
	CP	E
	JR	Z, PROGRESS_ANIMATION_L1
	; idemo na slijedecu iteraciju
PROGRESS_ANIMATION_L0:
	LD	(IX + OFF_ANIMACIJA_INST_CURR_ITER), E
	INC	HL
	LD	E, C
	ADD	HL, DE
	LD	A, (HL); novi pattern
	LD	(IY + OFF_HW_SPRITE_PATTERN), A
	ADD	HL, DE
	LD	A, (HL); nova boja
	LD	(IY + OFF_HW_SPRITE_COLOR), A
	LD	HL, (JIFFY)
	LD	(IX + OFF_ANIMACIJA_INST_TIME), L
	LD	(IX + OFF_ANIMACIJA_INST_TIME + 1), H
	LD	A, (IX + OFF_ANIMACIJA_INST_HW_SPRITE_INDEX)
	PUSH	IY
	POP	HL
	CALL	PUT_SPRITE_FULL
	RET
PROGRESS_ANIMATION_L1:
	; gotovo ili loop
	LD	A, B
	OR	A
	JR	Z, PROGRESS_ANIMATION_L2
	; loop
	LD	E, 0
	LD	L, (IX + OFF_ANIMACIJA_INST_ANIMACIJA)
	LD	H, (IX + OFF_ANIMACIJA_INST_ANIMACIJA + 1)
	INC	HL
	JR	PROGRESS_ANIMATION_L0
PROGRESS_ANIMATION_L2:
	; gotovo
	LD	(IX + OFF_ANIMACIJA_INST_ACTIVE), 0
	; sakrij sprite, bit ce re-inicijaliziran kod ispaljivanja torpeda
	LD	(IY + OFF_HW_SPRITE_Y), HW_SPRITE_HIDE_Y
	LD	A, (IX + OFF_ANIMACIJA_INST_HW_SPRITE_INDEX)
	PUSH	IY
	POP	HL
	CALL	PUT_SPRITE_FULL
	RET

; rutina za pomicanje sprajtova i deaktivaciju kad izadju iz ekrana
; rutina ocekuje da je sprite aktivan
; IX = inst
; IY = sprite
MOVE_SPRITE:
	PUSH	DE
	LD	L, (IY + OFF_SPRITE_X)
	LD	H, (IY + OFF_SPRITE_X + 1)
	LD	E, (IX + OFF_BROD_INST_SMJER)
	LD	D, (IX + OFF_BROD_INST_SMJER + 1)
	ADD	HL, DE
	PUSH	HL
	BIT	7, D
	JR	NZ, MOVE_SPRITE_L1
	; smjer udesno, provjeri da li je H=1
	LD	A,H
	CP	1
	JR	Z, MOVE_SPRITE_L2; deaktiviraj
	JR	MOVE_SPRITE_EXIT
MOVE_SPRITE_L1:
	; smjer ulijevo
	LD	E, (IX + OFF_BROD_INST_DIM_X)
	LD	D, 0
	SLA	E
	SLA	E
	SLA	E
	ADD	HL, DE
	BIT	7, H
	JR	NZ, MOVE_SPRITE_L2; deaktiviraj
	JR	MOVE_SPRITE_EXIT
MOVE_SPRITE_L2:
	LD	(IY + OFF_SPRITE_AKTIV_FLAG), 0
	; provjeri da li se radi o high profile target
	LD	A, (HIGH_PROFILE_TARGET_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, MOVE_SPRITE_L4
	LD	DE, (HIGH_PROFILE_TARGET_SPRITE)
	PUSH	IY
	POP	HL
	XOR	A
	SBC	HL, DE
	JR	NZ, MOVE_SPRITE_L4
	; high profile target je izasao izvan ekrana
	LD	(HIGH_PROFILE_TARGET_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE), A
	LD	HL, 0
	LD	(HIGH_PROFILE_TARGET_INST), HL
	LD	A, HW_SPRITE_HIDE_Y
	LD	(HIGH_PROFILE_TARGET_HW_SPRITE + OFF_HW_SPRITE_Y), A
	LD	A, HIGH_PROFILE_TARGET_HW_SPRITE_INDEX
	LD	HL, HIGH_PROFILE_TARGET_HW_SPRITE
	CALL	PUT_SPRITE_LITE_Y
	JR	MOVE_SPRITE_EXIT
MOVE_SPRITE_L4:
	; provjeri da li se radi o civilian target
	LD	A, (CIVILIAN_TARGET_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE)
	OR	A
	JR	Z, MOVE_SPRITE_EXIT
	LD	DE, (CIVILIAN_TARGET_SPRITE)
	PUSH	IY
	POP	HL
	XOR	A
	SBC	HL, DE
	JR	NZ, MOVE_SPRITE_EXIT
	; civilian target je izasao izvan ekrana
	LD	(CIVILIAN_TARGET_ANIMACIJA_INST + OFF_ANIMACIJA_INST_ACTIVE), A
	LD	HL, 0
	LD	(CIVILIAN_TARGET_INST), HL
	LD	A, HW_SPRITE_HIDE_Y
	LD	(CIVILIAN_TARGET_HW_SPRITE + OFF_HW_SPRITE_Y), A
	LD	A, CIVILIAN_TARGET_HW_SPRITE_INDEX
	LD	HL, CIVILIAN_TARGET_HW_SPRITE
	CALL	PUT_SPRITE_LITE_Y	
	
MOVE_SPRITE_EXIT:
	POP	HL
	LD	(IY + OFF_SPRITE_X), L
	LD	(IY + OFF_SPRITE_X + 1), H
	POP	DE
	RET

